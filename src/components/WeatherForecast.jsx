import { useEffect, useState } from "react";
import axios from "axios";


export default function WeatherForecast() {
  const [city, setCity] = useState("Kyiv");
  const [forecast, setForecast] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const API_KEY = "51dc7fe66c4bebf36f6762b120eaa1ae"; 

  const fetchWeather = async () => {
    if (!city.trim()) return;

    setLoading(true);
    setError(null);

    try {
      const { data } = await axios.get(
        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&lang=uk&appid=${API_KEY}`
      );
      setForecast(data.list);
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–≥–æ–¥–∏:", error);
      setError("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è —Ü—å–æ–≥–æ –º—ñ—Å—Ç–∞ üò¢");
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–æ–≥–Ω–æ–∑ –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É —Ä–µ–Ω–¥–µ—Ä—ñ
  useEffect(() => {
    fetchWeather();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  // –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–∞—Ç—É
  const formatDate = (dateString) => {
    const date = new Date(dateString);
    const days = ["–ù–¥", "–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±"];
    const day = days[date.getDay()];
    const number = date.getDate();
    return `${day}, ${number}`;
  };

  // –ë–µ—Ä–µ–º–æ –ª–∏—à–µ –æ–¥–∏–Ω –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –¥–µ–Ω—å ‚Äî –æ 12:00
  const dailyForecast = forecast.filter((item) =>
    item.dt_txt.includes("12:00:00")
  );

  return (
    <div className="weather">
      <h2 className="weather__title">–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ 5 –¥–Ω—ñ–≤</h2>

      {/* –§–æ—Ä–º–∞ –ø–æ—à—É–∫—É */}
      <div className="weather__search">
        <input
          type="text"
          value={city}
          onChange={(e) => setCity(e.target.value)}
          placeholder="–í–≤–µ–¥—ñ—Ç—å –º—ñ—Å—Ç–æ"
          className="weather__input"
        />
        <button onClick={fetchWeather} className="weather__button">
          –ü–æ—à—É–∫
        </button>
      </div>

      {/* –°—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */}
      {loading && <p className="weather__loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–≥–æ–¥–∏...</p>}

      {/* –í–∏–≤—ñ–¥ –ø–æ–º–∏–ª–∫–∏ */}
      {error && <p className="weather__error">{error}</p>}

      {/* –í–∏–≤—ñ–¥ –ø—Ä–æ–≥–Ω–æ–∑—É */}
      <div className="weather__list">
        {dailyForecast.map((item) => (
          <div key={item.dt} className="weather__card">
            <p className="weather__date">{formatDate(item.dt_txt)}</p>
            <p className="weather__temp">{Math.round(item.main.temp)}¬∞C</p>
            <p className="weather__desc">{item.weather[0].description}</p>
          </div>
        ))}
      </div>
    </div>
  );
}
